[[plugins]]
repo = 'Shougo/dein.vim'

# Color
[[plugins]]
repo = 'tomasr/molokai'
hook_add = '''
  au MyAutoCmd VimEnter * highlight Comment ctermfg=63
  au MyAutoCmd VimEnter * highlight Visual ctermfg=236
  au MyAutoCmd VimEnter * highlight MatchParen ctermfg=226 ctermbg=24
  au MyAutoCmd VimEnter * highlight Cursor ctermfg=2
  au MyAutoCmd VimEnter * highlight Special ctermfg=225
  au MyAutoCmd VimEnter * highlight Directory ctermfg=227
  au MyAutoCmd VimEnter * highlight Search ctermbg=5
'''

# snippet
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# indent highlight
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_color_term = 93
  let g:indentLine_char = 'Â¦'
  let g:indentLine_leadingSpaceChar = '.'
  let g:indentLine_leadingSpaceEnabled = 1
'''

# run
[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  nnoremap <silent><Space>r :cclose<CR>:QuickRun<CR>
  au FileType qf nnoremap <silent><buffer>q :quit<CR>
  let g:quickrun_config = {
    \'_' : {
    \  'runner' : 'vimproc',
    \  'runner/vimproc/updatetime' : 40,
    \  'hook/close_buffer/enable_failure' : 1,
    \  'hook/close_quickfix/enable_success' : 1,
    \  'outputter/buffer/split' : ':botright 8sp',
    \  'outputter/error/success' : 'buffer',
    \  'outputter/error/error' : 'quickfix',
    \  'outputter/buffer/into' : '1',
    \  'outputter/quickfix/errorformat': '%f:%l, %m in %f on line %l',
    \  'outputter/buffer/close_on_empty': 1,
    \  'outputter' : 'error',
    \},
    \'tex' : {
    \  'command' : 'latexmk',
    \  'cmdopt' : '-pv',
    \  'exec' : ['%c %o %s']
    \},
    \'cpp' : {
    \ 'command' : 'g++',
    \ 'cmdopt' : '-std=c++11',
    \},
    \}
'''

# preview
[[plugins]]
repo = 'tyru/open-browser.vim'

# git 
[[plugins]]
repo = 'tpope/vim-fugitive'

# search
[[plugins]]
repo = 'nelstrom/vim-visual-star-search'

# R
repo = 'jalvesaq/Nvim-R'
on_ft='r'

#-----------------------------------------
# debug
#-----------------------------------------
# go 
[[plugins]]
repo = 'sebdah/vim-delve'

#-----------------------------------------
# fzf
#-----------------------------------------
[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0
rtp = ''
on_path = ['.*']
hook_source = '''
  let g:fzf_layout = { 'down': '~60%' }
  let g:fzf_buffer_jump = 1
'''

#-----------------------------------------
# motion
#-----------------------------------------
[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
  let g:EasyMotion_enter_jump_first = 1
  map <Leader><Leader> <Plug>(easymotion-repeat)
  map  <Leader>f <Plug>(easymotion-bd-f)
  nmap <Leader>f <Plug>(easymotion-overwin-f) <Plug>(easymotion-prefix) 
  nmap <Leader>s <Plug>(easymotion-overwin-s2)
  map <Leader>l <Plug>(easymotion-bd-jk)
  nmap <Leader>l <Plug>(easymotion-overwin-line)
  map  <Leader>w <Plug>(easymotion-bd-w)
  map <Space> <Plug>(easymotion-s2)
  nmap <Leader>w <Plug>(easymotion-overwin-w)
  nmap g/ <Plug>(easymotion-sn)
'''

#-----------------------------------------
# syntax
#-----------------------------------------
# all syntax
#[[plugins]]
#repo = 'sheerun/vim-polyglot'

# tex
[[plugins]]
repo = 'gi1242/vim-tex-syntax'

# markdown
[[plugins]]
repo = 'gabrielelana/vim-markdown'
hook_add = '''
  let g:markdown_enable_spell_checking = 0
'''

# rust
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
  let g:rustfmt_autosave = 1
'''

# toml
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# elm
[[plugins]]
repo = 'ElmCast/elm-vim'
on_ft = 'elm'
hook_source = '''
  let g:elm_setup_keybindings = 0
'''
